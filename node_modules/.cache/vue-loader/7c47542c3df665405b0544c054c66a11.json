{"remainingRequest":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/containers/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/containers/Home.vue","mtime":1549941208000},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js","mtime":1547695432610},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js","mtime":1547695470207},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/vue-loader/lib/index.js","mtime":1547695473361}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce';\nimport { mapActions, mapState } from 'vuex';\nimport config from '@/config';\nimport ChatMessage from '@/components/ChatMessage';\nimport FeedbackWidget from '@/components/FeedbackWidget';\nimport Product from '@/components/Product';\nimport QuickInput from '@/components/QuickInput';\n\nexport default {\n  data() {\n    return {\n      input: '',\n      fullscreenImage: null,\n      headerImg: '',\n      activeIndex: null,\n      activeTopicId: null,\n    };\n  },\n\n  computed: {\n    ...mapState('chat', [\n      'messages',\n      'product',\n      'title',\n      'messagePending',\n      'inputActive',\n      'chat',\n      'feedbackPending',\n      'feedbackSent',\n      'topics',\n    ]),\n\n    ...mapState('faq', {\n      hotQuestions: 'questions',\n      hotWords: 'words',\n    }),\n\n    features() {\n      return config.features;\n    },\n\n    showFeedback() {\n      const { features, lastResponse } = this;\n      return features.feedback && lastResponse;\n    },\n\n    showQuickInput() {\n      const { features, quickInputItems } = this;\n      return features.faqQuickInput && quickInputItems.length > 0;\n    },\n\n    lastResponse() {\n      for (let idx = this.messages.length - 1; idx >= 0; idx -= 1) {\n        const msg = this.messages[idx];\n\n        if (msg.responseId && msg.relatedMessage) {\n          return msg;\n        }\n      }\n\n      return null;\n    },\n\n    quickInputItems() {\n      return this.hotWords;\n    },\n\n    productId() {\n      return this.$route.params.id;\n    },\n\n    submitDisabled() {\n      if (!this.input) {\n        return true;\n      }\n      if (this.messagePending) {\n        // 改为 WebSocket 后去掉该项\n        return true;\n      }\n      return false;\n    },\n  },\n\n  created() {\n    // limit expensive operation\n    function watchInput(val) {\n      if (val) {\n        this.getRelatedTopics({ productId: this.productId, msg: val });\n        this.activeIndex = null;\n        this.activeTopicId = null;\n      } else {\n        this.resetTopics();\n      }\n    }\n    this.debouncedWatchInput = debounce(watchInput, 500);\n    const { productId } = this;\n    this.getMetaData(productId);\n    this.fetchFAQ(productId);\n  },\n\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'getMetaData', 'judge', 'getRelatedTopics']),\n\n    ...mapActions('faq', {\n      fetchFAQ: 'fetchData',\n    }),\n\n    send(message) {\n      const trimmedMessage = message.trim();\n      if (!trimmedMessage) {\n        return;\n      }\n      this.sendMessage({ productId: this.productId, message: trimmedMessage });\n      this.input = '';\n    },\n\n    sendJudgement(judgement) {\n      const { lastResponse } = this;\n\n      this.judge({\n        productId: this.productId,\n        chatId: this.chat.id,\n        chatName: this.chat.name,\n        relatedMessage: lastResponse.relatedMessage,\n        relatedResponse: lastResponse.responseId,\n        judgement,\n      });\n    },\n\n    handleQuickInput(text) {\n      this.send(text);\n    },\n\n    handleUpVote() {\n      this.sendJudgement('survey.satisfaction.high');\n    },\n\n    handleDownVote() {\n      this.sendJudgement('survey.satisfaction.low');\n    },\n    onImageFullscreen(img) {\n      this.fullscreenImage = img;\n    },\n    onKeyUp() {\n      if (this.activeIndex === null || this.activeIndex === 0) {\n        this.activeIndex = this.topics.length - 1;\n      } else {\n        this.activeIndex -= 1;\n      }\n      this.activeTopicId = this.topics[this.activeIndex].id;\n    },\n    onKeyDown() {\n      if (this.activeIndex === null || this.activeIndex === this.topics.length - 1) {\n        this.activeIndex = 0;\n      } else {\n        this.activeIndex += 1;\n      }\n      this.activeTopicId = this.topics[this.activeIndex].id;\n    },\n    onMouseEnter(evt) {\n      const { topicId, index } = evt.target.dataset;\n      this.activeTopicId = parseInt(topicId, 10);\n      this.activeIndex = parseInt(index, 10);\n    },\n    onTopicClick(evt) {\n      const { topicTitle } = evt.target.dataset;\n      console.log(evt, topicTitle);\n      this.input = topicTitle;\n    },\n    onSubmit() {\n      if (this.activeTopicId) {\n        this.input = this.topics[this.activeIndex].title;\n      } else {\n        this.send(this.input);\n      }\n      this.resetTopics();\n    },\n    onClick() {\n      this.send(this.input);\n    },\n    resetTopics() {\n      this.activeIndex = null;\n      this.activeTopicId = null;\n      this.$store.commit('chat/resetTopics');\n    },\n  },\n\n  watch: {\n    inputActive(val) {\n      if (val === false) {\n        this.input = '';\n      }\n    },\n    input(val) {\n      this.debouncedWatchInput(val);\n    },\n  },\n\n  components: {\n    ChatMessage,\n    FeedbackWidget,\n    Product,\n    QuickInput,\n  },\n\n  metaInfo() {\n    const productName = this.product ? this.product.name : undefined;\n    const title = productName ? `${productName} - web robot` : 'web robot';\n    return {\n      title,\n    };\n  },\n};\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/containers","sourcesContent":["<template lang=\"pug\">\n  .chat-box.animated.fadeIn\n    .chat-box-header\n      .chat-header-title\n        img.header-logo(src='@/assets/logo.png')\n        span.header-title(v-text=\"title\")\n      .chat-box-toggle\n    .chat-box-body\n      .chat-logs-container\n        .chat-logs(v-chat-scroll=\"{always: true, smooth: true}\")\n          .chat-msg.animated.fadeIn(\n            v-for=\"message in messages\",\n            :class=\"message.responseId ? 'user' : 'self'\"\n          )\n            .msg-avatar(:class='{invisible: message.type === \"faq\"}')\n              img(src=\"../assets/ein-bot.png\", v-if=\"message.responseId && !product.avatar\")\n              img(:src=\"product.avatar\", v-if=\"message.responseId && product.avatar\")\n              img(src=\"../assets/user-avatar.png\", v-if=\"!message.responseId\")\n              span.msg-sender(v-if=\"message.responseId\") {{ title }}\n              span.msg-sender(v-if=\"!message.responseId\") 用户{{ chat.name.slice(0, 2) }}\n            chat-message(\n              :message=\"message\"\n              :clickLink=\"send\"\n              @image-fullscreen=\"onImageFullscreen\")\n\n        .extra-actions(v-if=\"showFeedback || showQuickInput\")\n          quick-input.quick-input(\n            v-if=\"showQuickInput\"\n            :items=\"quickInputItems\"\n            :onInput=\"handleQuickInput\"\n          )\n\n          feedback-widget.feedback-widget(\n            v-if=\"showFeedback\"\n\n            :onUpVote=\"handleUpVote\"\n            :onDownVote=\"handleDownVote\"\n            :pending=\"feedbackPending\"\n            :sent=\"feedbackSent\"\n          )\n\n        .msg-prompt-container(v-if='topics && topics.length')\n          ul.msg-prompt-list\n            li.msg-prompt(\n              v-for='(topic, index) in topics'\n              :data-topic-id='topic.id'\n              :data-index='index'\n              :data-topic-title='topic.title'\n              v-bind:class=\"{ active: activeTopicId === topic.id }\"\n              @mouseenter=\"onMouseEnter\"\n              @click=\"onTopicClick\") {{ topic.title }}\n\n        form.chat-input(:class=\"{ 'disabled': !inputActive }\")\n          textarea(\n            type='text',\n            placeholder='请输入消息...',\n            ref=\"input\"\n            v-model=\"input\",\n            @keydown.enter.prevent=\"onSubmit\"\n            @keydown.up.prevent=\"onKeyUp\"\n            @keydown.down.prevent=\"onKeyDown\")\n          button.chat-submit(\n            type=\"submit\",\n            :class=\"{ 'disabled': submitDisabled }\"\n            @click.prevent=\"onClick\",\n            :disabled=\"submitDisabled\"\n            ) 发送\n      .chat-product\n        product(:product=\"product\")\n    .full-screen-modal(v-if=\"fullscreenImage\" @click=\"fullscreenImage=null\")\n      .full-screen-close.fa.fa-fw.fa-close\n      .full-screen-image-container\n        img.full-screen-image(:src='fullscreenImage')\n</template>\n\n<script>\nimport debounce from 'lodash.debounce';\nimport { mapActions, mapState } from 'vuex';\nimport config from '@/config';\nimport ChatMessage from '@/components/ChatMessage';\nimport FeedbackWidget from '@/components/FeedbackWidget';\nimport Product from '@/components/Product';\nimport QuickInput from '@/components/QuickInput';\n\nexport default {\n  data() {\n    return {\n      input: '',\n      fullscreenImage: null,\n      headerImg: '',\n      activeIndex: null,\n      activeTopicId: null,\n    };\n  },\n\n  computed: {\n    ...mapState('chat', [\n      'messages',\n      'product',\n      'title',\n      'messagePending',\n      'inputActive',\n      'chat',\n      'feedbackPending',\n      'feedbackSent',\n      'topics',\n    ]),\n\n    ...mapState('faq', {\n      hotQuestions: 'questions',\n      hotWords: 'words',\n    }),\n\n    features() {\n      return config.features;\n    },\n\n    showFeedback() {\n      const { features, lastResponse } = this;\n      return features.feedback && lastResponse;\n    },\n\n    showQuickInput() {\n      const { features, quickInputItems } = this;\n      return features.faqQuickInput && quickInputItems.length > 0;\n    },\n\n    lastResponse() {\n      for (let idx = this.messages.length - 1; idx >= 0; idx -= 1) {\n        const msg = this.messages[idx];\n\n        if (msg.responseId && msg.relatedMessage) {\n          return msg;\n        }\n      }\n\n      return null;\n    },\n\n    quickInputItems() {\n      return this.hotWords;\n    },\n\n    productId() {\n      return this.$route.params.id;\n    },\n\n    submitDisabled() {\n      if (!this.input) {\n        return true;\n      }\n      if (this.messagePending) {\n        // 改为 WebSocket 后去掉该项\n        return true;\n      }\n      return false;\n    },\n  },\n\n  created() {\n    // limit expensive operation\n    function watchInput(val) {\n      if (val) {\n        this.getRelatedTopics({ productId: this.productId, msg: val });\n        this.activeIndex = null;\n        this.activeTopicId = null;\n      } else {\n        this.resetTopics();\n      }\n    }\n    this.debouncedWatchInput = debounce(watchInput, 500);\n    const { productId } = this;\n    this.getMetaData(productId);\n    this.fetchFAQ(productId);\n  },\n\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'getMetaData', 'judge', 'getRelatedTopics']),\n\n    ...mapActions('faq', {\n      fetchFAQ: 'fetchData',\n    }),\n\n    send(message) {\n      const trimmedMessage = message.trim();\n      if (!trimmedMessage) {\n        return;\n      }\n      this.sendMessage({ productId: this.productId, message: trimmedMessage });\n      this.input = '';\n    },\n\n    sendJudgement(judgement) {\n      const { lastResponse } = this;\n\n      this.judge({\n        productId: this.productId,\n        chatId: this.chat.id,\n        chatName: this.chat.name,\n        relatedMessage: lastResponse.relatedMessage,\n        relatedResponse: lastResponse.responseId,\n        judgement,\n      });\n    },\n\n    handleQuickInput(text) {\n      this.send(text);\n    },\n\n    handleUpVote() {\n      this.sendJudgement('survey.satisfaction.high');\n    },\n\n    handleDownVote() {\n      this.sendJudgement('survey.satisfaction.low');\n    },\n    onImageFullscreen(img) {\n      this.fullscreenImage = img;\n    },\n    onKeyUp() {\n      if (this.activeIndex === null || this.activeIndex === 0) {\n        this.activeIndex = this.topics.length - 1;\n      } else {\n        this.activeIndex -= 1;\n      }\n      this.activeTopicId = this.topics[this.activeIndex].id;\n    },\n    onKeyDown() {\n      if (this.activeIndex === null || this.activeIndex === this.topics.length - 1) {\n        this.activeIndex = 0;\n      } else {\n        this.activeIndex += 1;\n      }\n      this.activeTopicId = this.topics[this.activeIndex].id;\n    },\n    onMouseEnter(evt) {\n      const { topicId, index } = evt.target.dataset;\n      this.activeTopicId = parseInt(topicId, 10);\n      this.activeIndex = parseInt(index, 10);\n    },\n    onTopicClick(evt) {\n      const { topicTitle } = evt.target.dataset;\n      console.log(evt, topicTitle);\n      this.input = topicTitle;\n    },\n    onSubmit() {\n      if (this.activeTopicId) {\n        this.input = this.topics[this.activeIndex].title;\n      } else {\n        this.send(this.input);\n      }\n      this.resetTopics();\n    },\n    onClick() {\n      this.send(this.input);\n    },\n    resetTopics() {\n      this.activeIndex = null;\n      this.activeTopicId = null;\n      this.$store.commit('chat/resetTopics');\n    },\n  },\n\n  watch: {\n    inputActive(val) {\n      if (val === false) {\n        this.input = '';\n      }\n    },\n    input(val) {\n      this.debouncedWatchInput(val);\n    },\n  },\n\n  components: {\n    ChatMessage,\n    FeedbackWidget,\n    Product,\n    QuickInput,\n  },\n\n  metaInfo() {\n    const productName = this.product ? this.product.name : undefined;\n    const title = productName ? `${productName} - web robot` : 'web robot';\n    return {\n      title,\n    };\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n@import '../palette.styl'\n\n$theme-main-color = #5c9fd3\n$header-height = 45px\n$chat-input-height = 96px\n$submit-button-width = 80px\n$chatter-width = 1024px\n\n.full-screen-modal\n  position fixed\n  left 0\n  right 0\n  top 0\n  bottom 0\n  overflow-y auto\n  display flex\n  justify-content center\n\n  .full-screen-close\n    position absolute\n    cursor pointer\n    right 0\n    top 0\n    height 2.5rem\n    width 2.5rem\n    background-image url('../assets/close.svg')\n    background-repeat no-repeat\n    background-size contain\n\n  .full-screen-image\n    display block\n    margin 0 auto\n    padding 5rem 0 3rem\n    width auto\n    height auto\n    max-width calc(90%)\n\n.chat-box\n  width $chatter-width\n  height 720px\n  max-width 100%\n  max-height 100%\n  box-shadow 0px 5px 35px 9px #ccc\n  display flex\n  flex-direction column\n\n.chat-box-toggle\n  flex 1\n  text-align right\n\n.chat-box-name\n  flex 1\n  text-align left\n\n  img\n    max-height 100%\n    border-radius 50%\n\n.chat-header-title\n  text-align center\n\n  .header-logo\n    margin 0 10px\n    width auto\n    height 1em\n\n  .header-title\n    vertical-align middle\n\n.chat-box-header\n  display flex\n  flex-direction row\n  flex-wrap wrap\n  justify-content flex-start\n  align-items center\n  padding 0 15px\n  background $primary-color\n  height $header-height\n  color white\n  text-align center\n  font-size 20px\n\n.chat-box-body\n  display flex\n  flex 1\n  flex-direction row\n\n.chat-product\n  background #f7f7f7\n  width 300px\n\n  & > div\n    height 100%\n\n.chat-input\n  display flex\n  align-items center\n  background white\n  padding-right 8px\n  border-top 1px solid #ddd\n  height $chat-input-height\n  position relative\n\n  &.disabled\n    textarea\n      cursor not-allowed\n\n  textarea\n    flex 1\n    width 100%\n    height 100%\n    padding 10px 15px 10px 15px\n    border none\n    outline none\n    color #888\n    resize none\n\n    &::placeholder\n      color #ccc\n\n.chat-submit\n  display flex\n  align-items center\n  justify-content center\n  background transparent\n  box-shadow none\n  border none\n  border-radius 18px\n  background $primary-color\n  width $submit-button-width\n  height 36px\n  color #f7f7f7\n  cursor pointer\n\n  &.disabled\n    cursor not-allowed\n    background-color $secondary-color\n\n  .send-icon\n    width 24px\n    height 24px\n\n.chat-logs-container\n  display flex\n  flex 1\n  flex-direction column\n  height 660px\n\n.chat-logs\n  flex 1\n  width 100%\n  padding 30px 0 0\n  overflow-y auto\n  position relative\n\n  &::-webkit-scrollbar-track\n    background-color $scrollbar-color\n\n  &::-webkit-scrollbar\n    width 12px\n    background-color $scrollbar-color\n\n  &::-webkit-scrollbar-thumb\n    background-color $scrollbar-background-color\n\n.msg-prompt-container\n  height 0\n  position relative\n\n  .msg-prompt-list\n    position absolute\n    bottom 0\n    width 80%\n    margin 0 0 1px 10px\n    padding 0\n    border 1px solid #ddd\n\n    .msg-prompt\n      margin 0\n      padding 6px 1rem\n      list-style-type none\n      color #999\n      background white\n\n      &.active\n        color white\n        background $message-prompt-background-color\n\n.chat-msg\n  display flex\n  flex-direction row\n  margin 0 30px 2.5rem\n\n  &.user\n    justify-content flex-start\n\n  &.self\n    flex-direction row-reverse\n\n  .msg-avatar\n    display flex\n    flex-direction column\n    align-items center\n    width 5rem\n    height 64px\n    overflow initial\n    position relative\n\n    &.invisible\n      visibility hidden\n\n    img\n      display block\n      margin-bottom 4px\n      fill blue\n      width 64px\n      height 64px\n      border-radius 50%\n\n    .msg-sender\n      position absolute\n      bottom -24px\n      overflow hidden\n      white-space nowrap\n      color #999\n\n.close-icon\n  cursor pointer\n\n.extra-actions\n  display flex\n  align-items center\n  padding 1em 30px\n\n.quick-input\n  margin-right 1em\n\n.quick-input:last-child\n  margin-right 0\n\n.feedback-widget\n  margin-left auto\n  min-width 270px\n\n@media (max-height: 720px)\n  .chat-box\n    max-height 100%\n    height 100%\n\n  .chat-logs-container\n    height \"calc(100vh - %s)\" % $header-height\n\n@media (max-width: 768px)\n  .chat-box\n    height 100%\n    max-width 100%\n    width 100%\n\n    &-header\n      border-radius 0\n\n    .chat-product\n      display none\n\n    .chat-input\n      input::placeholder\n        opacity 0\n\n  .chat-logs-container\n    height \"calc(100vh - %s)\" % $header-height\n\n  .extra-actions\n    flex-wrap wrap\n\n  .quick-input\n    margin-right 0\n\n  .feedback-widget\n    margin-left 0\n</style>\n"]}]}