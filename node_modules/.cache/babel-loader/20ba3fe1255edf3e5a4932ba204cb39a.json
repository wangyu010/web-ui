{"remainingRequest":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/components/ChatMessage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/components/ChatMessage.vue","mtime":1549941208000},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js","mtime":1547695470207},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js","mtime":1547695473281},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js","mtime":1547695432610},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js","mtime":1547695470207},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/vue-loader/lib/index.js","mtime":1547695473361}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport './rte.stylus';\nimport './rte-colors.stylus';\n\nfunction toLinks(text) {\n  return (text || '').replace(/([^\\S]|^)(((https?:\\/\\/)|(www\\.))(\\S+))/gi, function (match, space, url) {\n    var hyperlink = url;\n\n    if (!hyperlink.match('^https?://')) {\n      hyperlink = \"http://\".concat(hyperlink);\n    }\n\n    return \"\".concat(space, \"<a href=\\\"\").concat(hyperlink, \"\\\" target=\\\"_blank\\\">\").concat(url, \"</a>\");\n  });\n}\n\nexport default {\n  props: {\n    message: Object,\n    clickLink: Function\n  },\n  mounted: function mounted() {\n    this.bindChoiceLinks();\n    this.bindImgZoomIn();\n  },\n  methods: {\n    onClick: function onClick(evt) {\n      evt.preventDefault();\n      this.clickLink(evt.currentTarget.text);\n    },\n    onImgZoomIn: function onImgZoomIn(evt) {\n      evt.preventDefault();\n      this.$emit('image-fullscreen', evt.target.src);\n    },\n    bindChoiceLinks: function bindChoiceLinks() {\n      var elems = this.$el.querySelectorAll('a[data-type=\"choice\"]'); // eslint-disable-next-line no-restricted-syntax\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = elems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var elem = _step.value;\n          elem.addEventListener('click', this.onClick);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    bindImgZoomIn: function bindImgZoomIn() {\n      var _this = this;\n\n      var elems = this.$el.querySelectorAll('figure > img');\n      elems.forEach(function (elem) {\n        elem.addEventListener('click', _this.onImgZoomIn);\n      });\n    },\n    toLinks: toLinks\n  }\n};",{"version":3,"sources":["ChatMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAYA,OAAA,cAAA;AACA,OAAA,qBAAA;;AAEA,SAAA,OAAA,CAAA,IAAA,EAAA;AACA,SAAA,CAAA,QAAA,EAAA,EAAA,OAAA,CACA,2CADA,EAEA,UAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA;AACA,QAAA,YAAA,GAAA;;AACA,QAAA,CAAA,UAAA,KAAA,CAAA,YAAA,CAAA,EAAA;AACA,mCAAA,SAAA;AACA;;AACA,qBAAA,KAAA,uBAAA,SAAA,kCAAA,GAAA;AACA,GARA,CAAA;AAUA;;AAEA,eAAA;AACA,SAAA;AACA,aAAA,MADA;AAEA,eAAA;AAFA,GADA;AAMA,SANA,qBAMA;AACA,SAAA,eAAA;AACA,SAAA,aAAA;AACA,GATA;AAWA,WAAA;AACA,WADA,mBACA,GADA,EACA;AACA,UAAA,cAAA;AACA,WAAA,SAAA,CAAA,IAAA,aAAA,CAAA,IAAA;AACA,KAJA;AAKA,eALA,uBAKA,GALA,EAKA;AACA,UAAA,cAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,IAAA,MAAA,CAAA,GAAA;AACA,KARA;AASA,mBATA,6BASA;AACA,UAAA,QAAA,KAAA,GAAA,CAAA,gBAAA,CAAA,uBAAA,CAAA,CADA,CAGA;;AAHA;AAAA;AAAA;;AAAA;AAIA,6BAAA,KAAA,8HAAA;AAAA,cAAA,IAAA;AACA,eAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAhBA;AAiBA,iBAjBA,2BAiBA;AAAA;;AACA,UAAA,QAAA,KAAA,GAAA,CAAA,gBAAA,CAAA,cAAA,CAAA;AAEA,YAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,aAAA,gBAAA,CAAA,OAAA,EAAA,MAAA,WAAA;AACA,OAFA;AAGA,KAvBA;AAyBA;AAzBA;AAXA,CAAA","sourcesContent":["<template lang=\"pug\">\n  .chat-message(:class=\"{ 'right': !message.responseId, 'failed': message.status === 'failed', faq: message.type === 'faq' }\")\n    .chat-message-text(v-text=\"message.content\", v-if=\"message.type == 'txt'\")\n    .chat-message-html(v-html=\"toLinks(message.content)\", v-if=\"message.type == 'html'\")\n    .chat-message-faq(v-if=\"message.type === 'faq'\")\n      h4 热门问题\n      ol\n        li(v-for=\"obj in message.questions\")\n          a(href=\"#\", @click=\"onClick\", v-text=\"obj.question\")\n</template>\n\n<script>\nimport './rte.stylus';\nimport './rte-colors.stylus';\n\nfunction toLinks(text) {\n  return (text || '').replace(\n    /([^\\S]|^)(((https?:\\/\\/)|(www\\.))(\\S+))/gi,\n    (match, space, url) => {\n      let hyperlink = url;\n      if (!hyperlink.match('^https?://')) {\n        hyperlink = `http://${hyperlink}`;\n      }\n      return `${space}<a href=\"${hyperlink}\" target=\"_blank\">${url}</a>`;\n    },\n  );\n}\n\nexport default {\n  props: {\n    message: Object,\n    clickLink: Function,\n  },\n\n  mounted() {\n    this.bindChoiceLinks();\n    this.bindImgZoomIn();\n  },\n\n  methods: {\n    onClick(evt) {\n      evt.preventDefault();\n      this.clickLink(evt.currentTarget.text);\n    },\n    onImgZoomIn(evt) {\n      evt.preventDefault();\n      this.$emit('image-fullscreen', evt.target.src);\n    },\n    bindChoiceLinks() {\n      const elems = this.$el.querySelectorAll('a[data-type=\"choice\"]');\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const elem of elems) {\n        elem.addEventListener('click', this.onClick);\n      }\n    },\n    bindImgZoomIn() {\n      const elems = this.$el.querySelectorAll('figure > img');\n\n      elems.forEach((elem) => {\n        elem.addEventListener('click', this.onImgZoomIn);\n      });\n    },\n\n    toLinks,\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n@import '../palette.styl'\n\n.chat-message\n  flex-shrink 0\n  background white\n  padding 1rem\n  color #444\n  max-width 75%\n  position relative\n  margin-left 10px\n  margin-bottom 10px\n  border-radius 5px\n  word-break break-word\n  background $message-background-color\n  position relative\n\n  &:before\n    content ''\n    width 0\n    height 0\n    border-left 5px solid transparent\n    border-top 5px solid transparent\n    border-bottom 5px solid transparent\n    border-right 5px solid $message-background-color\n    position absolute\n    left -10px\n    top 1.5rem\n\n  &.faq\n    background white\n    border 1px solid #ddd\n    margin-left 5px\n\n    &:before\n      display none\n\n  &.right\n    margin-right 10px\n    background #eee\n\n    &:before\n      content ''\n      width 0\n      height 0\n      border-right 5px solid transparent\n      border-top 5px solid transparent\n      border-bottom 5px solid transparent\n      border-left 5px solid #eee\n      position absolute\n      right -10px\n      left unset\n      top 1.5rem\n\n  &.failed :before\n    content '发送失败'\n    position absolute\n    color red\n    left -4.5rem\n\n.chat-message-faq\n  ul, ol\n    padding-left 0\n    min-width 10rem\n\n  li\n    border-bottom 1px solid #ddd\n    list-style-position inside\n    line-height 1.6rem\n    padding 0.5rem 0\n\n    &:last-child\n      border none\n      padding-bottom 0\n\n  a\n    color $link-color\n\n.chat-message >>> .chat-message-html\n  p\n    margin 0\n\n  a\n    color $link-color\n    cursor pointer\n\n    &:hover\n      color $link-hover-color\n      text-decoration underline\n\n  // a, span\n  // display inline-block // commented for list-style issue\n  img\n    display block\n    margin 1em auto\n    max-width 100%\n    cursor zoom-in\n\n  ol, ul\n    margin-bottom 1rem\n    padding-left 2.5em\n</style>\n"],"sourceRoot":"src/components"}]}