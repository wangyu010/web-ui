{"remainingRequest":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/eslint-loader/index.js??ref--13-0!/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/faq.js","dependencies":[{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/faq.js","mtime":1549941208000},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js","mtime":1547695470207},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js","mtime":1547695473281},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js","mtime":1547695432610},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/eslint-loader/index.js","mtime":1547695453923}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport config from '@/config';\nvar defaultState = {\n  pending: false,\n  questions: [],\n  words: []\n};\nvar actions = {\n  fetchData: function fetchData(_ref, productId) {\n    var commit = _ref.commit;\n    commit('fetchPending');\n    axios.get(\"/api/stats/\".concat(productId)).then(function (_ref2) {\n      var data = _ref2.data;\n      commit('fetchComplete', data);\n\n      if (config.features.faqQuickInput && data.hot_faq && data.hot_faq.length) {\n        commit('chat/addMessage', {\n          questions: data.hot_faq,\n          type: 'faq',\n          responseId: 'fake'\n        }, {\n          root: true\n        });\n      }\n    }).catch(function (error) {\n      console.error('failed to fetch faq data:', error);\n      commit('fetchComplete', {});\n    });\n  }\n};\n/* eslint-disable no-param-reassign */\n\nvar mutations = {\n  fetchPending: function fetchPending(state) {\n    state.pending = true;\n  },\n  fetchComplete: function fetchComplete(state, data) {\n    var words = data.hotwords;\n\n    if (words) {\n      state.words = words.map(function (_ref3) {\n        var word = _ref3.word;\n        return word;\n      });\n    }\n\n    state.pending = false;\n  }\n};\n/* eslint-enable */\n\nexport default {\n  namespaced: true,\n  state: defaultState,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/faq.js"],"names":["axios","config","defaultState","pending","questions","words","actions","fetchData","productId","commit","get","then","data","features","faqQuickInput","hot_faq","length","type","responseId","root","catch","error","console","mutations","fetchPending","state","fetchComplete","hotwords","map","word","namespaced"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,eAAe;AACnBC,WAAS,KADU;AAEnBC,aAAW,EAFQ;AAGnBC,SAAO;AAHY,CAArB;AAMA,IAAMC,UAAU;AACdC,WADc,2BACQC,SADR,EACmB;AAAA,QAArBC,MAAqB,QAArBA,MAAqB;AAC/BA,WAAO,cAAP;AAEAT,UACGU,GADH,sBACqBF,SADrB,GAEGG,IAFH,CAEQ,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAClBH,aAAO,eAAP,EAAwBG,IAAxB;;AACA,UAAIX,OAAOY,QAAP,CAAgBC,aAAhB,IAAiCF,KAAKG,OAAtC,IAAiDH,KAAKG,OAAL,CAAaC,MAAlE,EAA0E;AACxEP,eACE,iBADF,EAEE;AAAEL,qBAAWQ,KAAKG,OAAlB;AAA2BE,gBAAM,KAAjC;AAAwCC,sBAAY;AAApD,SAFF,EAGE;AAAEC,gBAAM;AAAR,SAHF;AAKD;AACF,KAXH,EAYGC,KAZH,CAYS,UAACC,KAAD,EAAW;AAChBC,cAAQD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACAZ,aAAO,eAAP,EAAwB,EAAxB;AACD,KAfH;AAgBD;AApBa,CAAhB;AAuBA;;AACA,IAAMc,YAAY;AAChBC,cADgB,wBACHC,KADG,EACI;AAClBA,UAAMtB,OAAN,GAAgB,IAAhB;AACD,GAHe;AAKhBuB,eALgB,yBAKFD,KALE,EAKKb,IALL,EAKW;AAAA,QACPP,KADO,GACGO,IADH,CACjBe,QADiB;;AAGzB,QAAItB,KAAJ,EAAW;AACToB,YAAMpB,KAAN,GAAcA,MAAMuB,GAAN,CAAU;AAAA,YAAGC,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAd;AAAA,OAAV,CAAd;AACD;;AAEDJ,UAAMtB,OAAN,GAAgB,KAAhB;AACD;AAbe,CAAlB;AAeA;;AAEA,eAAe;AACb2B,cAAY,IADC;AAEbL,SAAOvB,YAFM;AAGbI,kBAHa;AAIbiB;AAJa,CAAf","sourcesContent":["import axios from 'axios';\nimport config from '@/config';\n\nconst defaultState = {\n  pending: false,\n  questions: [],\n  words: [],\n};\n\nconst actions = {\n  fetchData({ commit }, productId) {\n    commit('fetchPending');\n\n    axios\n      .get(`/api/stats/${productId}`)\n      .then(({ data }) => {\n        commit('fetchComplete', data);\n        if (config.features.faqQuickInput && data.hot_faq && data.hot_faq.length) {\n          commit(\n            'chat/addMessage',\n            { questions: data.hot_faq, type: 'faq', responseId: 'fake' },\n            { root: true },\n          );\n        }\n      })\n      .catch((error) => {\n        console.error('failed to fetch faq data:', error);\n        commit('fetchComplete', {});\n      });\n  },\n};\n\n/* eslint-disable no-param-reassign */\nconst mutations = {\n  fetchPending(state) {\n    state.pending = true;\n  },\n\n  fetchComplete(state, data) {\n    const { hotwords: words } = data;\n\n    if (words) {\n      state.words = words.map(({ word }) => word);\n    }\n\n    state.pending = false;\n  },\n};\n/* eslint-enable */\n\nexport default {\n  namespaced: true,\n  state: defaultState,\n  actions,\n  mutations,\n};\n"]}]}