{"remainingRequest":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js!/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/eslint-loader/index.js??ref--13-0!/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/chat.js","dependencies":[{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/chat.js","mtime":1549960635615},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/cache-loader/dist/cjs.js","mtime":1547695470207},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/thread-loader/dist/cjs.js","mtime":1547695473281},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/babel-loader/lib/index.js","mtime":1547695432610},{"path":"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/eslint-loader/index.js","mtime":1547695453923}],"contextDependencies":[],"result":["import _objectSpread from \"/home/xvan/workspace/ein_ui/hangxin-web-ui5/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport axios from 'axios';\nvar defaultState = {\n  title: '客服机器人',\n  product: {\n    name: undefined,\n    avatar: undefined,\n    extra: {}\n  },\n  chat: {\n    id: undefined,\n    name: undefined\n  },\n  messages: [],\n  messagePending: false,\n  inputActive: true,\n  feedbackPending: false,\n  feedbackSent: false,\n  topics: []\n}; // actions\n\nvar chatActions = {\n  sendMessage: function sendMessage(_ref, _ref2) {\n    var commit = _ref.commit,\n        state = _ref.state;\n    var productId = _ref2.productId,\n        message = _ref2.message;\n    commit('toggleInput', false);\n    var now = new Date();\n    var msg = {\n      content: message,\n      type: 'txt',\n      createAt: now,\n      status: 'pending'\n    };\n    commit('addMessage', msg);\n    var chat = state.chat;\n    var data = {\n      chat: chat,\n      content: {\n        type: 'txt',\n        body: message\n      },\n      posted_at: now.toISOString()\n    };\n    axios.post(\"/api/messages/\".concat(productId), data).then(function (resp) {\n      var receivedMessage = resp.data;\n      commit('addMessage', {\n        content: receivedMessage.content.body,\n        type: receivedMessage.content.type,\n        relatedMessage: receivedMessage.related_message,\n        createAt: receivedMessage.create_at,\n        responseId: receivedMessage.response_id\n      });\n      commit('setMessageState', {\n        message: msg,\n        status: 'success'\n      });\n      commit('toggleInput', true);\n    }).catch(function () {\n      commit('setMessageState', {\n        message: msg,\n        status: 'failed'\n      });\n      commit('toggleInput', true);\n    });\n  },\n  getMetaData: function getMetaData(_ref3, productId) {\n    var commit = _ref3.commit;\n    axios.post('/api/chats', {\n      product_id: productId\n    }).then(function (resp) {\n      var metaData = resp.data;\n      commit('setProduct', metaData.bot);\n      commit('setChat', metaData.chat);\n      commit('addMessage', {\n        content: metaData.bot.greeting,\n        type: 'html',\n        responseId: 'fake'\n      });\n      commit('toggleInput', true);\n    });\n  },\n  judge: function judge(_ref4, _ref5) {\n    var commit = _ref4.commit;\n    var productId = _ref5.productId,\n        chatId = _ref5.chatId,\n        chatName = _ref5.chatName,\n        relatedMessage = _ref5.relatedMessage,\n        relatedResponse = _ref5.relatedResponse,\n        judgement = _ref5.judgement;\n    var data = {\n      chat: {\n        id: chatId,\n        name: chatName\n      },\n      related_message: relatedMessage,\n      related_response: relatedResponse,\n      content: {\n        type: 'txt',\n        body: judgement\n      },\n      posted_at: new Date().toISOString()\n    };\n    commit('judgementStarting');\n    axios.post(\"/api/training/\".concat(productId), data).then(function () {\n      commit('judgementFinished');\n    });\n  },\n  getRelatedTopics: function getRelatedTopics(_ref6, _ref7) {\n    var commit = _ref6.commit;\n    var productId = _ref7.productId,\n        msg = _ref7.msg;\n    commit('fetchTopicsPending');\n    axios.get(\"/suggest/?limit=5&page=1&product_id=\".concat(productId, \"&words_match=and&question=\").concat(msg)).then(function (resp) {\n      var receivedMessage = resp.data; //const len = getJsonLength(receivedMessage['topics']);\n\n      var len = Object.keys(receivedMessage['topics']).length;\n      var suggests = [];\n\n      if (len > 0) {\n        for (var i = 0; i < len; i += 1) {\n          var title = receivedMessage['topics'][i]['rounds'][0]['questions'][0]['content'];\n          var id = receivedMessage['topics'][i]['rounds'][0]['questions'][0]['id'];\n          var topic = {\n            title: title,\n            id: id\n          };\n          suggests.push(topic);\n        }\n      }\n\n      commit('fetchTopicsComplete', suggests);\n    }).catch(function () {\n      commit('fetchTopicsError');\n    });\n  }\n}; // mutations\n\n/* eslint-disable no-param-reassign */\n\nvar chatMutations = {\n  addMessage: function addMessage(state, payload) {\n    state.messages.push(payload);\n  },\n  setMessageState: function setMessageState(_, _ref8) {\n    var message = _ref8.message,\n        status = _ref8.status;\n    message.status = status;\n  },\n  toggleInput: function toggleInput(state, payload) {\n    state.inputActive = payload;\n  },\n  toggleMessagePending: function toggleMessagePending(state, payload) {\n    state.messagePending = payload;\n  },\n  setProduct: function setProduct(state, payload) {\n    state.product = _objectSpread({}, payload);\n  },\n  setChat: function setChat(state, payload) {\n    state.chat = _objectSpread({}, payload);\n  },\n  judgementStarting: function judgementStarting(state) {\n    state.feedbackPending = true;\n  },\n  judgementFinished: function judgementFinished(state) {\n    state.feedbackPending = false;\n    state.feedbackSent = true;\n  },\n  fetchTopicsPending: function fetchTopicsPending() {},\n  // eslint-disable-next-line\n  fetchTopicsComplete: function fetchTopicsComplete(state, topics) {\n    state.topics = topics;\n  },\n  fetchTopicsError: function fetchTopicsError(state) {},\n  resetTopics: function resetTopics(state) {\n    state.topics = [];\n  }\n};\n/* eslint-enable */\n\nexport default {\n  namespaced: true,\n  state: defaultState,\n  actions: chatActions,\n  mutations: chatMutations\n};",{"version":3,"sources":["/home/xvan/workspace/ein_ui/hangxin-web-ui5/src/store/modules/chat.js"],"names":["axios","defaultState","title","product","name","undefined","avatar","extra","chat","id","messages","messagePending","inputActive","feedbackPending","feedbackSent","topics","chatActions","sendMessage","commit","state","productId","message","now","Date","msg","content","type","createAt","status","data","body","posted_at","toISOString","post","then","resp","receivedMessage","relatedMessage","related_message","create_at","responseId","response_id","catch","getMetaData","product_id","metaData","bot","greeting","judge","chatId","chatName","relatedResponse","judgement","related_response","getRelatedTopics","get","len","Object","keys","length","suggests","i","topic","push","chatMutations","addMessage","payload","setMessageState","_","toggleInput","toggleMessagePending","setProduct","setChat","judgementStarting","judgementFinished","fetchTopicsPending","fetchTopicsComplete","fetchTopicsError","resetTopics","namespaced","actions","mutations"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,eAAe;AACnBC,SAAO,OADY;AAEnBC,WAAS;AACPC,UAAMC,SADC;AAEPC,YAAQD,SAFD;AAGPE,WAAO;AAHA,GAFU;AAOnBC,QAAM;AACJC,QAAIJ,SADA;AAEJD,UAAMC;AAFF,GAPa;AAWnBK,YAAU,EAXS;AAYnBC,kBAAgB,KAZG;AAanBC,eAAa,IAbM;AAenBC,mBAAiB,KAfE;AAgBnBC,gBAAc,KAhBK;AAkBnBC,UAAQ;AAlBW,CAArB,C,CAqBA;;AACA,IAAMC,cAAc;AAClBC,aADkB,oCACqC;AAAA,QAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,QAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,QAAtBC,SAAsB,SAAtBA,SAAsB;AAAA,QAAXC,OAAW,SAAXA,OAAW;AACrDH,WAAO,aAAP,EAAsB,KAAtB;AACA,QAAMI,MAAM,IAAIC,IAAJ,EAAZ;AACA,QAAMC,MAAM;AACVC,eAASJ,OADC;AAEVK,YAAM,KAFI;AAGVC,gBAAUL,GAHA;AAIVM,cAAQ;AAJE,KAAZ;AAMAV,WAAO,YAAP,EAAqBM,GAArB;AATqD,QAU7ChB,IAV6C,GAUpCW,KAVoC,CAU7CX,IAV6C;AAWrD,QAAMqB,OAAO;AACXrB,gBADW;AAEXiB,eAAS;AACPC,cAAM,KADC;AAEPI,cAAMT;AAFC,OAFE;AAMXU,iBAAWT,IAAIU,WAAJ;AANA,KAAb;AASAhC,UACGiC,IADH,yBACyBb,SADzB,GACsCS,IADtC,EAEGK,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,UAAMC,kBAAkBD,KAAKN,IAA7B;AACAX,aAAO,YAAP,EAAqB;AACnBO,iBAASW,gBAAgBX,OAAhB,CAAwBK,IADd;AAEnBJ,cAAMU,gBAAgBX,OAAhB,CAAwBC,IAFX;AAGnBW,wBAAgBD,gBAAgBE,eAHb;AAInBX,kBAAUS,gBAAgBG,SAJP;AAKnBC,oBAAYJ,gBAAgBK;AALT,OAArB;AAOAvB,aAAO,iBAAP,EAA0B;AAAEG,iBAASG,GAAX;AAAgBI,gBAAQ;AAAxB,OAA1B;AACAV,aAAO,aAAP,EAAsB,IAAtB;AACD,KAbH,EAcGwB,KAdH,CAcS,YAAM;AACXxB,aAAO,iBAAP,EAA0B;AAAEG,iBAASG,GAAX;AAAgBI,gBAAQ;AAAxB,OAA1B;AACAV,aAAO,aAAP,EAAsB,IAAtB;AACD,KAjBH;AAkBD,GAvCiB;AAwClByB,aAxCkB,8BAwCMvB,SAxCN,EAwCiB;AAAA,QAArBF,MAAqB,SAArBA,MAAqB;AACjClB,UAAMiC,IAAN,CAAW,YAAX,EAAyB;AAAEW,kBAAYxB;AAAd,KAAzB,EAAoDc,IAApD,CAAyD,UAACC,IAAD,EAAU;AACjE,UAAMU,WAAWV,KAAKN,IAAtB;AACAX,aAAO,YAAP,EAAqB2B,SAASC,GAA9B;AACA5B,aAAO,SAAP,EAAkB2B,SAASrC,IAA3B;AACAU,aAAO,YAAP,EAAqB;AACnBO,iBAASoB,SAASC,GAAT,CAAaC,QADH;AAEnBrB,cAAM,MAFa;AAGnBc,oBAAY;AAHO,OAArB;AAKAtB,aAAO,aAAP,EAAsB,IAAtB;AACD,KAVD;AAWD,GApDiB;AAqDlB8B,OArDkB,+BAuDf;AAAA,QAFK9B,MAEL,SAFKA,MAEL;AAAA,QADDE,SACC,SADDA,SACC;AAAA,QADU6B,MACV,SADUA,MACV;AAAA,QADkBC,QAClB,SADkBA,QAClB;AAAA,QAD4Bb,cAC5B,SAD4BA,cAC5B;AAAA,QAD4Cc,eAC5C,SAD4CA,eAC5C;AAAA,QAD6DC,SAC7D,SAD6DA,SAC7D;AACD,QAAMvB,OAAO;AACXrB,YAAM;AACJC,YAAIwC,MADA;AAEJ7C,cAAM8C;AAFF,OADK;AAKXZ,uBAAiBD,cALN;AAMXgB,wBAAkBF,eANP;AAOX1B,eAAS;AACPC,cAAM,KADC;AAEPI,cAAMsB;AAFC,OAPE;AAWXrB,iBAAW,IAAIR,IAAJ,GAAWS,WAAX;AAXA,KAAb;AAaAd,WAAO,mBAAP;AACAlB,UAAMiC,IAAN,yBAA4Bb,SAA5B,GAAyCS,IAAzC,EAA+CK,IAA/C,CAAoD,YAAM;AACxDhB,aAAO,mBAAP;AACD,KAFD;AAGD,GAzEiB;AA0ElBoC,kBA1EkB,0CA0E+B;AAAA,QAA9BpC,MAA8B,SAA9BA,MAA8B;AAAA,QAAlBE,SAAkB,SAAlBA,SAAkB;AAAA,QAAPI,GAAO,SAAPA,GAAO;AAC/CN,WAAO,oBAAP;AACAlB,UACGuD,GADH,+CAC8CnC,SAD9C,uCACoFI,GADpF,GAEGU,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,UAAMC,kBAAkBD,KAAKN,IAA7B,CADc,CAEd;;AACA,UAAM2B,MAAMC,OAAOC,IAAP,CAAYtB,gBAAgB,QAAhB,CAAZ,EAAuCuB,MAAnD;AACA,UAAIC,WAAW,EAAf;;AACA,UAAIJ,MAAM,CAAV,EAAa;AACX,aAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIL,GAApB,EAAyBK,KAAK,CAA9B,EAAiC;AAC/B,cAAM3D,QAASkC,gBAAgB,QAAhB,EAA0ByB,CAA1B,EAA6B,QAA7B,EAAuC,CAAvC,EAA0C,WAA1C,EAAuD,CAAvD,EAA0D,SAA1D,CAAf;AACA,cAAMpD,KAAK2B,gBAAgB,QAAhB,EAA0ByB,CAA1B,EAA6B,QAA7B,EAAuC,CAAvC,EAA0C,WAA1C,EAAuD,CAAvD,EAA0D,IAA1D,CAAX;AACA,cAAMC,QAAQ;AAAC5D,mBAAOA,KAAR;AAAeO,gBAAIA;AAAnB,WAAd;AACAmD,mBAASG,IAAT,CAAcD,KAAd;AACD;AACF;;AACD5C,aAAO,qBAAP,EAA8B0C,QAA9B;AACD,KAhBH,EAiBGlB,KAjBH,CAiBS,YAAM;AACXxB,aAAO,kBAAP;AACD,KAnBH;AAoBD;AAhGiB,CAApB,C,CAmGA;;AACA;;AACA,IAAM8C,gBAAgB;AACpBC,YADoB,sBACT9C,KADS,EACF+C,OADE,EACO;AACzB/C,UAAMT,QAAN,CAAeqD,IAAf,CAAoBG,OAApB;AACD,GAHmB;AAIpBC,iBAJoB,2BAIJC,CAJI,SAIoB;AAAA,QAAnB/C,OAAmB,SAAnBA,OAAmB;AAAA,QAAVO,MAAU,SAAVA,MAAU;AACtCP,YAAQO,MAAR,GAAiBA,MAAjB;AACD,GANmB;AAQpByC,aARoB,uBAQRlD,KARQ,EAQD+C,OARC,EAQQ;AAC1B/C,UAAMP,WAAN,GAAoBsD,OAApB;AACD,GAVmB;AAYpBI,sBAZoB,gCAYCnD,KAZD,EAYQ+C,OAZR,EAYiB;AACnC/C,UAAMR,cAAN,GAAuBuD,OAAvB;AACD,GAdmB;AAepBK,YAfoB,sBAeTpD,KAfS,EAeF+C,OAfE,EAeO;AACzB/C,UAAMhB,OAAN,qBAAqB+D,OAArB;AACD,GAjBmB;AAkBpBM,SAlBoB,mBAkBZrD,KAlBY,EAkBL+C,OAlBK,EAkBI;AACtB/C,UAAMX,IAAN,qBAAkB0D,OAAlB;AACD,GApBmB;AAsBpBO,mBAtBoB,6BAsBFtD,KAtBE,EAsBK;AACvBA,UAAMN,eAAN,GAAwB,IAAxB;AACD,GAxBmB;AA0BpB6D,mBA1BoB,6BA0BFvD,KA1BE,EA0BK;AACvBA,UAAMN,eAAN,GAAwB,KAAxB;AACAM,UAAML,YAAN,GAAqB,IAArB;AACD,GA7BmB;AA8BpB6D,oBA9BoB,gCA8BC,CAAE,CA9BH;AA+BpB;AACAC,qBAhCoB,+BAgCAzD,KAhCA,EAgCOJ,MAhCP,EAgCe;AACjCI,UAAMJ,MAAN,GAAeA,MAAf;AACD,GAlCmB;AAmCpB8D,kBAnCoB,4BAmCH1D,KAnCG,EAmCI,CAEvB,CArCmB;AAsCpB2D,aAtCoB,uBAsCR3D,KAtCQ,EAsCD;AACjBA,UAAMJ,MAAN,GAAe,EAAf;AACD;AAxCmB,CAAtB;AA0CA;;AAEA,eAAe;AACbgE,cAAY,IADC;AAEb5D,SAAOlB,YAFM;AAGb+E,WAAShE,WAHI;AAIbiE,aAAWjB;AAJE,CAAf","sourcesContent":["import axios from 'axios';\n\nconst defaultState = {\n  title: '客服机器人',\n  product: {\n    name: undefined,\n    avatar: undefined,\n    extra: {},\n  },\n  chat: {\n    id: undefined,\n    name: undefined,\n  },\n  messages: [],\n  messagePending: false,\n  inputActive: true,\n\n  feedbackPending: false,\n  feedbackSent: false,\n\n  topics: [],\n};\n\n// actions\nconst chatActions = {\n  sendMessage({ commit, state }, { productId, message }) {\n    commit('toggleInput', false);\n    const now = new Date();\n    const msg = {\n      content: message,\n      type: 'txt',\n      createAt: now,\n      status: 'pending',\n    };\n    commit('addMessage', msg);\n    const { chat } = state;\n    const data = {\n      chat,\n      content: {\n        type: 'txt',\n        body: message,\n      },\n      posted_at: now.toISOString(),\n    };\n\n    axios\n      .post(`/api/messages/${productId}`, data)\n      .then((resp) => {\n        const receivedMessage = resp.data;\n        commit('addMessage', {\n          content: receivedMessage.content.body,\n          type: receivedMessage.content.type,\n          relatedMessage: receivedMessage.related_message,\n          createAt: receivedMessage.create_at,\n          responseId: receivedMessage.response_id,\n        });\n        commit('setMessageState', { message: msg, status: 'success' });\n        commit('toggleInput', true);\n      })\n      .catch(() => {\n        commit('setMessageState', { message: msg, status: 'failed' });\n        commit('toggleInput', true);\n      });\n  },\n  getMetaData({ commit }, productId) {\n    axios.post('/api/chats', { product_id: productId }).then((resp) => {\n      const metaData = resp.data;\n      commit('setProduct', metaData.bot);\n      commit('setChat', metaData.chat);\n      commit('addMessage', {\n        content: metaData.bot.greeting,\n        type: 'html',\n        responseId: 'fake',\n      });\n      commit('toggleInput', true);\n    });\n  },\n  judge({ commit }, {\n    productId, chatId, chatName, relatedMessage, relatedResponse, judgement,\n  }) {\n    const data = {\n      chat: {\n        id: chatId,\n        name: chatName,\n      },\n      related_message: relatedMessage,\n      related_response: relatedResponse,\n      content: {\n        type: 'txt',\n        body: judgement,\n      },\n      posted_at: new Date().toISOString(),\n    };\n    commit('judgementStarting');\n    axios.post(`/api/training/${productId}`, data).then(() => {\n      commit('judgementFinished');\n    });\n  },\n  getRelatedTopics({ commit }, { productId, msg }) {\n    commit('fetchTopicsPending');\n    axios\n      .get(`/suggest/?limit=5&page=1&product_id=${productId}&words_match=and&question=${msg}`)\n      .then((resp) => {\n        const receivedMessage = resp.data;\n        //const len = getJsonLength(receivedMessage['topics']);\n        const len = Object.keys(receivedMessage['topics']).length;\n        let suggests = [];\n        if (len > 0) {\n          for (let i = 0; i < len; i += 1) {\n            const title  = receivedMessage['topics'][i]['rounds'][0]['questions'][0]['content'];\n            const id = receivedMessage['topics'][i]['rounds'][0]['questions'][0]['id'];\n            const topic = {title: title, id: id}\n            suggests.push(topic);\n          }\n        }\n        commit('fetchTopicsComplete', suggests);\n      })\n      .catch(() => {\n        commit('fetchTopicsError');\n      });\n  },\n};\n\n// mutations\n/* eslint-disable no-param-reassign */\nconst chatMutations = {\n  addMessage(state, payload) {\n    state.messages.push(payload);\n  },\n  setMessageState(_, { message, status }) {\n    message.status = status;\n  },\n\n  toggleInput(state, payload) {\n    state.inputActive = payload;\n  },\n\n  toggleMessagePending(state, payload) {\n    state.messagePending = payload;\n  },\n  setProduct(state, payload) {\n    state.product = { ...payload };\n  },\n  setChat(state, payload) {\n    state.chat = { ...payload };\n  },\n\n  judgementStarting(state) {\n    state.feedbackPending = true;\n  },\n\n  judgementFinished(state) {\n    state.feedbackPending = false;\n    state.feedbackSent = true;\n  },\n  fetchTopicsPending() {},\n  // eslint-disable-next-line\n  fetchTopicsComplete(state, topics) {\n    state.topics = topics;\n  },\n  fetchTopicsError(state) {\n\n  },\n  resetTopics(state) {\n    state.topics = [];\n  },\n};\n/* eslint-enable */\n\nexport default {\n  namespaced: true,\n  state: defaultState,\n  actions: chatActions,\n  mutations: chatMutations,\n};\n"]}]}